------------------------------------------------------------Anonymous class(Анонимные класы)----------------------------------------------------------------------
1)Есть клас Factorial c двумя методами intFactorial(int n) и bigIntegerFactorial(BigInteger n), которые считают
факторилы для типов int и BigInteger. Написать следующие анонимные класы.
1.1)В котором оба метода считают факториал рекурсивно
1.2)В котором метод bigIntegerFactorial считает результат, а метод intFactorial возвращает бесконечность.
1.3)В котором метод intFactorial считает результат, а метод bigIntegerFactorial возвращает 0.



2)Есть интерфейс MathFunctions(), в котором есть такие методы
int increment(int n), int decrement(int n), int twoIntsFunc(int a, int b), int arrayFunc(int[] array), void output(String message) 
Реализовать следующие анонимные класы и оттестить их работу.

2.1)Создать анонимный клас, в котором 
increment(n) и decrement(n) возвращают значение переданого числа уменьшеного или увеличеного на 1. 
twoIntsFunc(a,b) возвращает суму двух чисел. 
arrayFunc(array) возвращает суму всех элементов масива. 
output(String message) выводит текст "Стандартные функции"

2.2)Создать анонимный клас, в котором 
increment(n) и decrement(n) возвращают значение переданого числа уменьшеного или увеличеного на 10. 
twoIntsFunc(a,b) возвращает произведение двух чисел. 
arrayFunc(array) возвращает произведение всех элементов масива. 
output(String message) выводит текст "Другие функции" + message

2.3)Создать анонимный клас, в котором 
increment(n) и decrement(n) возвращают всегда 0. 
twoIntsFunc(a,b) возвращает а в степени b. 
arrayFunc(array) возвращает максимальное число масива. 
output(String message) выводит текст "Совсем другие функции" + message



3)Есть класc Student
	- имя,
	- фамилия,
	- возраст, 
	- масив обьектов MarkSubjectObject
					- название предмета, 
					- количество кредитов, 
					- оценка за предмет
Есть интерфейс MarkCounter, в котором есть всего один метод String getAverageMark(student);
Реализовать следующие анонимные класы и оттестить их работу.

3.1)Создать анонимный класс, который считает средний был по всем предметам без учета количества кредитов.
3.2)Создать анонимный класс, который считает средний был по всем предметам с учетом количества кредитов.
Формула: (ко-во кредитов1 * оценка1 + ... + ко-во кредитовN * оценкаN) / общее_количество_всех_кредитов.
3.3)Создать анонимный класс, который считает средний был по всем предметам с учетом кредитов.
Формула та же что и для задания 2.2. После подсчета значения оно округляеться.
3.4)Создать анонимный класс, который считает средний бал как в прошлом задание и переводит его в буквенное значение. И возвращает букву.
0 - 60 (F), 61 - 64 (E), 65 - 70 (D), 71 - 80 (C), 81 - 90 (B), 91 - 100 (A)



----------------------------------------------------------------------Local classes(Локальные класы)---------------------------------------------------------------------------------

4)Написать метод, который принимает запись с клавиатуры. В зависимости от введенного значения(строка, символ, число или число с дробной частью) 
  метод создает обьект класа MyInteger, MyDouble, MyChar, MyString и тут же выводит его toString()(в toString должно вывести так: MyDouble - 20.9).
  Если тип не являеться не одним из перечисленых нужно выдать ошибку "Неизвестный тип" используя Exception.
  MyInteger, MyDouble, MyChar, MyString это локальные класы и их расположение должно быть лишь внутри метода, который вычисляет тип того что было введено с клавиатуры.

5)Написать метод, который принимает масив неопределеного размера Human(name, surname, age, gender). В методе 
  -все люди, возраст,которых больше 40 загоняються в обьект типа Group, который содержит в себе поле ArrayList обьектов Human и выводиться этот обьект Group
   в отсортированом виде по имени. Метод сортировки списка людей sortHumans() в поле Group находиться прямо в класе Group.
  -те кому 40 лет загоняються в обьект типа HumanGroup, который содержит поле масив обьектов Human. К имени каждого добавляеться приставка -толстый.
  -все люди, возраст, которых меньше 40 поддаються следующим операциям. Выводиться из всех этих людей человек с самым первым в алфавитном порядке именем 
   и с самым большим возрастом. Получаем этих двух людей с помощью методов getMaxAgeHuman(humans), getMaxNameHuman(humans). Методы находяться в класе 
   HumanFinder. Классы Group, HumanGroup и HumanFinder это локальные классы и они должны находиться внутри метода, где и происходят все осноные вещи.




----------------------------------------------------------------------Exceptions---------------------------------------------------------------------------------

6) Написать програму создания и добавления в список информации про студента(name, surname, secondName, age, averageMark).
- Если при вводе имени, фамилии или отчества количество символов будет меньше 2 или больше 16, то должно вылететь исключение 
  WordLengthException c сообщением, которое сообщит что было введено или мало или много символов.
- Если средний бал будет меньше 60 или больше 100, то должно вылететь исключение DigitSizeException c сообщением
- Если количество студентов в групе достигнет заданого числа, то должна вылететь ошибка PersonGroupNumberException c сообщением


7)Зделать програму аналогичную прошлой но добавляться будет информация про работников(name, surname, secondName, salary). И теперь
должна быть возможность удалять работников из списка.
- Если при вводе имени, фамилии или отчества количество символов будет меньше 2 или больше 16, то должно вылететь исключение 
  WordLengthException c сообщением, которое сообщит что было введено или мало или много символов.
- Если зарплата будет меньше 0, то должно вылететь исключение NumberLessThanZeroException с сообщением
- Если количество работников в групе достигнет заданого числа, то должна вылететь PersonGroupNumberException c сообщением
- Если количество работников в групе 0, но вы пытаетесь все равно удалять их, то должно вылететь исключение
  PersonGroupNumberException  c сообщением
