----------------------------------------------------Наследование----------------------------------------------------------------------------------

1)Построить иерархию классов по описанию.
Есть клас Организм(имя, возраст)
		Животное()
			Акула(вес, длина, количество зубов)
			Человек(фамилия, пол)
				Студент(специализация, средний бал)
				Школьник(список оценок, название школы)
			Собака(порода, способность выполнять команды(да\нет))
			Кот(порода, ласковость(да\нет))
		Растение()
			Баобаб(высота, радиус ствола)
Запретить возможность наследоваться от класов Акула, Студент, Школьник, Кот, Собака, Баобаб.
Для класса животного определить метод sayHello(), который выводит пустую строку. Для дочерних класов переопределить этот метод если есть надобность.
Для класса животного определить метод evolve(), который не будет наследоваться в дочерних классах.
Для класса растения создать статический метод fade(). Проверить наследуеться ли он в дочерних классах. Написать ответ в комментарии перед методом fade().




2)Придумать свой пример наследование. Один родительский клас и 3 класса наследника. И у одного из наследников должно быть еще два наследника.
Придумать 4 методы для работы с этими класами.



3)Дан клас животных Animal(name, age)
У класа животных есть наследники папугай, собака и рыбка. 
-Папугая можно учить словам.
-Собаку можно заставить испугать папугая и тогда есть вероятность что папугай забудет одно из слов, которые знает. 
-Если папугай забыл слово, то собака получает +1 к scaryLevel и тем самым вероятность что она испугает папугая в следующий раз растет на 10%.
-По достижению scaryLevel = 9(вероятность испуга 90%) дальше scaryLevel уже больше не растет.
-Рыбку можно покормить и тогда она немного выростет.

Parrot
-words(слова, которые знает попугай. Изначально знает только слово "папугай")

Fish
-weight(вес, который увеличиваться при кормлении на 2%)
Есть вероятность 20% что еда будет плохой и рыбка не вырастет
Есть вероятность 20% что еда будет очень хорошей и рыбка вырастет на 10%)
Есть вероятность 60% что еда будет обычной и рыбка вырастет на стандартных 2%)

Dog
-scaryLevel(уровень запугивания. Стандартно 3(30% вероятность что испугает))

Написать програму, которая позволит выбирать животных и действия, которые они будут совершать.
Все животные будут только в еденичном екземпляре.



------------------------------------------------------------Полиморфизм-----------------------------------------------------------------------

4)Создать ArrayList строк и LinkedList строк. Написать следующие методы для обоих списков.
4.1)Написать метод, который получает массив строк, куда будут записаны только самая длинная и самая короткая строки.
4.2)Написать метод, который получет строку, которая образуеться из всех строк списка, в которых есть буква 'а'.
4.3)Написать метод, который получает список из строк стартового списка, в которые входит каждая вторая строка.
4.4)Переписать предыдущие методы используя выученное по полиморфизму.



5)Переделать задание 3 с использованием Полиморфизма. Вместо уникальных методов для каждого животного написать унверсальные методы, которые позволят
работать з животными через полиморфизм, а не на прямую с каждым животным. 



6)Создать родительский клас Dragon и его наследников.
Dragon(name, age)
	Hydra(headNumber), 
	DeathDragon(deathPower),
	WaterDragon(bodyLength).
Создать масив драконов и заполнить его гидрами,драконами смерти и водными драконами. Написать следующие методы:
6.1)метод, который сортирует масив драконов по имени в алфавитном порядке.
6.2)методы, которые получают из масива драконов только гидр, только водных драконов или только драконов смерти.
6.3)метод, который получает из массива драконов всех гидр с количеством голов большим чем определенное число.
6.4)метод, который получает из масива, всех гидр у которых количество голов больше среднего количества голов всех гидр 
6.5)метод, который получает из масива, всех драконов смерти, сила смерти которых в два и больше раз больше заданого числа.
6.6)метод, который получает из масива, всех водных драконов длина тела которого больше 3/4 всех водных драконов.
6.7)методы, которые подсчитывают время сортировки масива 
	-по имени 
	-по возрасту 
	-по хешкоду(Для дракона вычисляется как сума числовых значений каждого символа имени умноженная на возраст.
		    Для каждого из видов драконов к вычисленому по старому правилу хешкоду добавить еще дополнительный параметр типа дракона)
(Уточнение: сортировка по хешкоду должна быть быстрее сортировки по имени)
(Уточнение: размер должен быть не меньше 2_000_000 драконов)


